"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
Object.defineProperty(exports, "__esModule", { value: true });
var apollo_server_1 = require("apollo-server");
exports.default = apollo_server_1.gql(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  schema {\n    query: Query\n    mutation: Mutation\n  }\n\n  directive @authentication on FIELD_DEFINITION\n\n  scalar DateTime\n  scalar EmailAddress\n  scalar PhoneNumber\n  scalar Currency\n  scalar PositiveInt\n\n  type Query {\n    login(email: EmailAddress!, password: String!): User!\n    logout(email: EmailAddress!, password: String!): User!\n    places(cityNameSearch: String!): [Place!]!\n    placeByAiportId(airportId: String!): Place!\n  }\n\n  type Mutation {\n    registerUser(userDetails: UserRegisterInput): User!\n    updateUser(\n      email: EmailAddress\n      password: String\n      firstName: String\n      lastName: String\n      phoneNumber: PhoneNumber\n    ): User! @authentication\n    createTrip(tripInput: TripCreateInput): User! @authentication\n    updateTrip(_id: ID!, booked: Boolean!): Trip! @authentication\n    deleteTrip(tripId: String!): User! @authentication\n  }\n\n  type User {\n    _id: ID!\n    email: EmailAddress!\n    password: String!\n    firstName: String\n    lastName: String!\n    phoneNumber: PhoneNumber\n    trips: [Trip]!\n    token: String\n  }\n\n  type Trip {\n    _id: ID!\n    creator: ID!\n    booked: Boolean!\n    startLocation: Place!\n    endLocation: Place!\n    startDate: DateTime!\n    destinations: [Place!]!\n    flights: [Flight!]!\n    currency: Currency!\n    price: PositiveInt!\n  }\n\n  type Flight {\n    _id: ID!\n    origin: Place!\n    destination: Place!\n    departureDate: DateTime!\n    arrivalDate: DateTime!\n    airline: String!\n    currency: Currency!\n    price: PositiveInt!\n  }\n\n  type Place {\n    _id: ID!\n    airportId: String!\n    airportName: String!\n    location: String!\n    cityId: String!\n    cityName: String!\n    countryId: String!\n    countryName: String!\n  }\n\n  input UserRegisterInput {\n    email: EmailAddress!\n    password: String!\n    firstName: String!\n    lastName: String!\n    phoneNumber: PhoneNumber\n  }\n\n  input UserUpdateInput {\n    email: EmailAddress\n    password: String\n    firstName: String\n    lastName: String\n    phoneNumber: PhoneNumber\n  }\n\n  input TripCreateInput {\n    creator: String!\n    booked: Boolean!\n    startLocation: String!\n    endLocation: String!\n    startDate: DateTime!\n    destinations: [String!]!\n    flights: [FlightInput!]!\n    currency: Currency!\n    price: PositiveInt!\n  }\n\n  input TripUpdateInput {\n    _id: ID!\n    creator: String!\n    booked: Boolean\n    startLocation: String\n    endLocation: String\n    startDate: DateTime\n    destinations: [String!]\n    flights: [FlightInput!]\n    currency: Currency\n    price: PositiveInt\n  }\n\n  input FlightInput {\n    origin: String!\n    destination: String!\n    departureDate: DateTime!\n    arrivalDate: DateTime!\n    airline: String!\n    currency: Currency!\n    price: PositiveInt!\n  }\n"], ["\n  schema {\n    query: Query\n    mutation: Mutation\n  }\n\n  directive @authentication on FIELD_DEFINITION\n\n  scalar DateTime\n  scalar EmailAddress\n  scalar PhoneNumber\n  scalar Currency\n  scalar PositiveInt\n\n  type Query {\n    login(email: EmailAddress!, password: String!): User!\n    logout(email: EmailAddress!, password: String!): User!\n    places(cityNameSearch: String!): [Place!]!\n    placeByAiportId(airportId: String!): Place!\n  }\n\n  type Mutation {\n    registerUser(userDetails: UserRegisterInput): User!\n    updateUser(\n      email: EmailAddress\n      password: String\n      firstName: String\n      lastName: String\n      phoneNumber: PhoneNumber\n    ): User! @authentication\n    createTrip(tripInput: TripCreateInput): User! @authentication\n    updateTrip(_id: ID!, booked: Boolean!): Trip! @authentication\n    deleteTrip(tripId: String!): User! @authentication\n  }\n\n  type User {\n    _id: ID!\n    email: EmailAddress!\n    password: String!\n    firstName: String\n    lastName: String!\n    phoneNumber: PhoneNumber\n    trips: [Trip]!\n    token: String\n  }\n\n  type Trip {\n    _id: ID!\n    creator: ID!\n    booked: Boolean!\n    startLocation: Place!\n    endLocation: Place!\n    startDate: DateTime!\n    destinations: [Place!]!\n    flights: [Flight!]!\n    currency: Currency!\n    price: PositiveInt!\n  }\n\n  type Flight {\n    _id: ID!\n    origin: Place!\n    destination: Place!\n    departureDate: DateTime!\n    arrivalDate: DateTime!\n    airline: String!\n    currency: Currency!\n    price: PositiveInt!\n  }\n\n  type Place {\n    _id: ID!\n    airportId: String!\n    airportName: String!\n    location: String!\n    cityId: String!\n    cityName: String!\n    countryId: String!\n    countryName: String!\n  }\n\n  input UserRegisterInput {\n    email: EmailAddress!\n    password: String!\n    firstName: String!\n    lastName: String!\n    phoneNumber: PhoneNumber\n  }\n\n  input UserUpdateInput {\n    email: EmailAddress\n    password: String\n    firstName: String\n    lastName: String\n    phoneNumber: PhoneNumber\n  }\n\n  input TripCreateInput {\n    creator: String!\n    booked: Boolean!\n    startLocation: String!\n    endLocation: String!\n    startDate: DateTime!\n    destinations: [String!]!\n    flights: [FlightInput!]!\n    currency: Currency!\n    price: PositiveInt!\n  }\n\n  input TripUpdateInput {\n    _id: ID!\n    creator: String!\n    booked: Boolean\n    startLocation: String\n    endLocation: String\n    startDate: DateTime\n    destinations: [String!]\n    flights: [FlightInput!]\n    currency: Currency\n    price: PositiveInt\n  }\n\n  input FlightInput {\n    origin: String!\n    destination: String!\n    departureDate: DateTime!\n    arrivalDate: DateTime!\n    airline: String!\n    currency: Currency!\n    price: PositiveInt!\n  }\n"])));
var templateObject_1;
