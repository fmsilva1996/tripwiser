import { gql } from 'apollo-server';

export default gql`
  schema {
    query: Query
    mutation: Mutation
  }

  scalar DateTime
  scalar EmailAddress 
  scalar PhoneNumber
  scalar Currency
  scalar PositiveInt

  type Query {
    login(
      email: EmailAddress!
      password: String!
    ): User!
  }

  type Mutation {
    register(
      userDetails: UserRegisterInput
    ): User!
    updateUser(
      userDetails: UserUpdateInput
    ): User!
    createTrip(
      tripInput: TripCreateInput
    ): Trip!
    updateTrip(
      tripInput: TripUpdateInput
    ): Trip!
    deleteTrip(
      tripid: ID!
    ): Trip!
  }

  type User {
    _id: ID!
    email: EmailAddress!
    password: String!
    firstName: String
    lastName: String!
    phoneNumber: PhoneNumber
    trips: [Trip]!
  }

  type Trip {
    _id: ID!
    creator: ID!
    booked: Boolean!
    startLocation: Place!
    endLocation: Place!
    startDate: DateTime!
    destinations: [Place]!
    flights: [Flight]!
    currency: Currency!
    price: PositiveInt!
  }
  
  type Flight {
    _id: ID!
    origin: Place!
    destination: Place!
    departureDate: DateTime!
    arrivalDate: DateTime!
    airline: String!
    currency: Currency!
    price: PositiveInt!
  }

  type Place { 
    _id: ID!
    airportId: String!
    airportName: String!
    location: String!
    cityId: String!
    cityName: String!
    countryId: String!
    countryName: String!
  }
  
  input UserRegisterInput {
    email: EmailAddress!
    password: String!
    firstName: String!
    lastName: String!
    phoneNumber: PhoneNumber
  }

  input UserUpdateInput {
    email: EmailAddress!
    password: String
    firstName: String
    lastName: String
    phoneNumber: PhoneNumber
  }

  input UserIdInput {
    _id: String!
  }
  
  input placeIdInput {
    airportId: String!
  }

  input TripCreateInput {
    creator: String!
    booked: Boolean!
    startLocation: String!
    endLocation: String!
    startDate: DateTime!
    destinations: [String!]!
    flights: [FlightInput!]!
    currency: Currency!
    price: PositiveInt!
  }

  input TripUpdateInput {
    _id: ID!
    creator: UserIdInput!
    booked: Boolean
    startLocation: placeIdInput
    endLocation: placeIdInput
    startDate: DateTime
    destinations: [placeIdInput!]
    flights: [FlightInput!]
    currency: Currency
    price: PositiveInt
  }

  input FlightInput {
    origin: String!
    destination: String!
    departureDate: DateTime!
    arrivalDate: DateTime!
    airline: String!
    currency: Currency!
    price: PositiveInt!
  }

  input PlaceInput {
    airportId: String!
    airportName: String!
    location: String!
    cityId: String!
    cityName: String!
    countryId: String!
    countryName: String!
  }
`