import { gql } from 'apollo-server';

export default gql`
  schema {
    query: Query
    mutation: Mutation
  }

  scalar DateTime
  scalar EmailAddress 
  scalar PhoneNumber
  scalar Currency
  scalar PositiveInt

  type Query {
    login(
      email: EmailAddress
      password: String!
    ): User!
  }

  type Mutation {
    register(
      email: EmailAddress!
      password: String!
      firstName: String!
      lastName: String!
      phoneNumber: PhoneNumber
    ): User
    updateUser(
      userDetails: UserDetailsInput
    ): User
    updateTrips(
      email: EmailAddress!
      trip: TripInput
    ): TripList
  }

  type User {
    _id: ID!
    email: EmailAddress
    password: String!
    firstName: String
    lastName: String!
    phoneNumber: PhoneNumber
    favouritedTrips: [Trip!]
    bookedTrips: [Trip!]
  }

  type TripList {
    _id: ID
    favouritedTrips: [Trip]
    bookedTrips: [Trip]
  }

  type Trip {
    _id: ID!
    booked: Boolean!
    startLocation: String!
    endLocation: String!
    startDate: DateTime
    destinations: DateTime
    flights: [Flight]
    currency: Currency
    price: PositiveInt
  }
  
  type Flight {
    _id: ID!
    origin: String!
    destination: String!
    departureDate: DateTime
    arrivalDate: DateTime
    airline: String!
    currency: Currency
    price: PositiveInt
  }

  type Destination {
    _id: ID!
    airport: String!
    aiportCode: String!
    city: String!
    country: String!
  }
  
  input UserDetailsInput {
    email: EmailAddress!
    password: String
    firstName: String
    lastName: String
    phoneNumber: PhoneNumber
  }

  input TripInput {
    _id: ID!
    booked: Boolean!
    startLocation: String!
    endLocation: String!
    startDate: DateTime
    destinations: DateTime
    flights: [FlightInput]
    currency: Currency
    price: PositiveInt
  }

  input FlightInput {
    _id: ID!
    origin: String!
    destination: String!
    departureDate: String!
    arrivalDate: String!
    airline: String!
    currency: Currency
    price: PositiveInt!
  }

  input DestinationInput {
    _id: ID!
    airport: String!
    aiportCode: String!
    city: String!
    country: String!
  }
`